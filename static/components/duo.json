{
  "init.js": {
    "id": "init.js",
    "type": "js",
    "mtime": 1442609225000,
    "src": "'use strict';\n\nvar events = require(\"./events.js\");\n\nclass TerminalLine {\n    constructor (message) {\n        this.element = document.createElement('line');\n\n        this.setMessage(message);\n    }\n\n    setMessage (message) {\n        this.element.innerHTML = message;\n    }\n\n    getElement () {\n        return this.element;\n    }\n};\n\nclass TerminalCommandLine {\n    constructor () {\n        this.element = document.createElement('inputline');\n        this.prompt = document.createElement('prompt');\n        this.input = document.createElement('input');\n        \n        this.input.className = 'command';\n\n        this.element.appendChild(this.prompt);\n        this.element.appendChild(this.input);\n    }\n\n    setDisabled (disabled) {\n        this.input.setAttribute('disabled', disabled);\n    }\n\n    setAutofocus () {\n        this.input.setAttribute('autofocus', true);\n    }\n\n    setInput (message) {\n        this.input.value = message;\n    }\n\n    setPrompt (prompt) {\n        this.prompt.innerText = prompt;\n    }\n\n    getElement () {\n        return this.element;\n    }\n};\n\nclass TerminalLineFeed {\n    constructor (output) {\n        this.lineFeed = [];\n        this.output = output;\n    }\n\n    push (line) {\n        this.output.appendChild(line.getElement());\n        this.lineFeed.push(line);\n    }\n\n    remove (line) {\n        this.output.removeChild(line.getElement());\n\n        let itemPos = this.lineFeed.indexOf(line);\n\n        ~itemPos && this.lineFeed.splice(itemPos, 1);\n    }\n}\n\nclass Terminal extends events {\n\tconstructor () {\n        super();\n\n\t\tthis.init();\n\n        this.registerEvents();\n\t}\n\n\tinit () {\n        this._promptPrefix = 'nobody@apx:~$';\n\n\t\tthis.container = this._initContainer();\n\n\t\tthis.command = this.container.querySelector('inputline .command');\n\t\tthis.output = this.container.querySelector('output');\n\n        this.lineFeed = new TerminalLineFeed(this.output);\n\t}\n\n    _inputLine (readOnly) {\n        return new TerminalCommandLine ();\n    }\n\n\t_initContainer () {\n\t\tlet container = document.createElement('cream');\n\t\tcontainer.className = 'box';\n\n        this.output = document.createElement('output');\n\n        this.inputLine = this._inputLine();\n        \n        this.inputLine.setPrompt(this._promptPrefix);\n        this.inputLine.setAutofocus(true);\n\n\t\tdocument.body.appendChild(container);\n\n\t\tcontainer.appendChild(this.output);\n        container.appendChild(this.inputLine.getElement());\n\n\t\treturn container;\n\t}\n\n    registerEvents() {\n        this.command.addEventListener('keydown', (e) => {\n            if (e.keyCode === 13) {\n                this.command.disabled = true;\n                this.emit('command', this.command.value);\n            }\n        });\n    }\n\n    // write partial message, non-exit\n    write (msg) {\n        msg = msg.split('\\n').map((line) => line.trim());\n        msg = msg.map((line) => {\n            return new TerminalLine(line);\n        });\n\n        let fakeInputLine = new TerminalCommandLine();\n\n        fakeInputLine.setDisabled(true);\n        fakeInputLine.setInput(this.command.value);\n        fakeInputLine.setPrompt(this._promptPrefix);\n\n        this.lineFeed.push(fakeInputLine);\n\n        msg.forEach((line) => {\n            this.lineFeed.push(line);\n        });\n    }\n\n    // quit command\n    commit (msg) {\n        this.command.value = '';\n        this.command.disabled = false;\n\n        this.command.focus();\n    }\n};\n\nclass apx extends events {\n    constructor() {\n        super();\n\n        this.terminal = new Terminal();\n\n        this.terminal.on('command', (msg) => {\n            setTimeout(() => {\n                this.terminal.write('yolo');\n                this.terminal.commit();\n            }, 2000);\n        });\n    }\n};\n\nnew apx();",
    "deps": {
      "./events.js": "events.js"
    },
    "entry": true
  },
  "events.js": {
    "id": "events.js",
    "type": "js",
    "mtime": 1442597539000,
    "src": "var domain;function EventEmitter(){EventEmitter.init.call(this)}module.exports=EventEmitter;EventEmitter.EventEmitter=EventEmitter;EventEmitter.usingDomains=!1;EventEmitter.prototype.domain=void 0;EventEmitter.prototype._events=void 0;EventEmitter.prototype._maxListeners=void 0;EventEmitter.defaultMaxListeners=10; EventEmitter.init=function(){this.domain=null;EventEmitter.usingDomains&&(domain=domain||require(\"domain\"),!domain.active||this instanceof domain.Domain||(this.domain=domain.active));this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events={},this._eventsCount=0);this._maxListeners=this._maxListeners||void 0};EventEmitter.prototype.setMaxListeners=function(b){if(\"number\"!==typeof b||0>b||isNaN(b))throw new TypeError(\"n must be a positive number\");this._maxListeners=b;return this}; function $getMaxListeners(b){return void 0===b._maxListeners?EventEmitter.defaultMaxListeners:b._maxListeners}EventEmitter.prototype.getMaxListeners=function(){return $getMaxListeners(this)};function emitNone(b,a,c){if(a)b.call(c);else{a=b.length;b=arrayClone(b,a);for(var d=0;d<a;++d)b[d].call(c)}}function emitOne(b,a,c,d){if(a)b.call(c,d);else{a=b.length;b=arrayClone(b,a);for(var e=0;e<a;++e)b[e].call(c,d)}} function emitTwo(b,a,c,d,e){if(a)b.call(c,d,e);else{a=b.length;b=arrayClone(b,a);for(var f=0;f<a;++f)b[f].call(c,d,e)}}function emitThree(b,a,c,d,e,f){if(a)b.call(c,d,e,f);else{a=b.length;b=arrayClone(b,a);for(var g=0;g<a;++g)b[g].call(c,d,e,f)}}function emitMany(b,a,c,d){if(a)b.apply(c,d);else{a=b.length;b=arrayClone(b,a);for(var e=0;e<a;++e)b[e].apply(c,d)}} EventEmitter.prototype.emit=function(b){var a,c,d,e,f,g;a=!1;d=\"error\"===b;if(c=this._events)d=d&&null==c.error;else if(!d)return!1;g=this.domain;if(d){a=arguments[1];if(g)a||(a=Error('Uncaught, unspecified \"error\" event.')),a.domainEmitter=this,a.domain=g,a.domainThrown=!1,g.emit(\"error\",a);else{if(a instanceof Error)throw a;g=Error('Uncaught, unspecified \"error\" event. ('+a+\")\");g.context=a;throw g;}return!1}c=c[b];if(!c)return!1;g&&(g.enter(),a=!0);var h=\"function\"===typeof c;d=arguments.length; switch(d){case 1:emitNone(c,h,this);break;case 2:emitOne(c,h,this,arguments[1]);break;case 3:emitTwo(c,h,this,arguments[1],arguments[2]);break;case 4:emitThree(c,h,this,arguments[1],arguments[2],arguments[3]);break;default:e=Array(d-1);for(f=1;f<d;f++)e[f-1]=arguments[f];emitMany(c,h,this,e)}a&&g.exit();return!0}; EventEmitter.prototype.addListener=function(b,a){var c,d;if(\"function\"!==typeof a)throw new TypeError(\"listener must be a function\");(c=this._events)?(c.newListener&&(this.emit(\"newListener\",b,a.listener?a.listener:a),c=this._events),d=c[b]):(c=this._events={},this._eventsCount=0);d?(\"function\"===typeof d?d=c[b]=[d,a]:d.push(a),d.warned||(c=$getMaxListeners(this))&&0<c&&d.length>c&&(d.warned=!0,console.error(\"(node) warning: possible EventEmitter memory leak detected. %d %s listeners added. Use emitter.setMaxListeners() to increase limit.\", d.length,b),console.trace())):(c[b]=a,++this._eventsCount);return this};EventEmitter.prototype.on=EventEmitter.prototype.addListener;EventEmitter.prototype.once=function(b,a){function c(){this.removeListener(b,c);d||(d=!0,a.apply(this,arguments))}if(\"function\"!==typeof a)throw new TypeError(\"listener must be a function\");var d=!1;c.listener=a;this.on(b,c);return this}; EventEmitter.prototype.removeListener=function(b,a){var c,d,e,f;if(\"function\"!==typeof a)throw new TypeError(\"listener must be a function\");d=this._events;if(!d)return this;c=d[b];if(!c)return this;if(c===a||c.listener&&c.listener===a)0===--this._eventsCount?this._events={}:(delete d[b],d.removeListener&&this.emit(\"removeListener\",b,a));else if(\"function\"!==typeof c){e=-1;for(f=c.length;0<f--;)if(c[f]===a||c[f].listener&&c[f].listener===a){e=f;break}if(0>e)return this;if(1===c.length){c[0]=void 0; if(0===--this._eventsCount)return this._events={},this;delete d[b]}else spliceOne(c,e);d.removeListener&&this.emit(\"removeListener\",b,a)}return this}; EventEmitter.prototype.removeAllListeners=function(b){var a;a=this._events;if(!a)return this;if(!a.removeListener)return 0===arguments.length?(this._events={},this._eventsCount=0):a[b]&&(0===--this._eventsCount?this._events={}:delete a[b]),this;if(0===arguments.length){a=Object.keys(a);for(var c=0,d;c<a.length;++c)d=a[c],\"removeListener\"!==d&&this.removeAllListeners(d);this.removeAllListeners(\"removeListener\");this._events={};this._eventsCount=0;return this}a=a[b];if(\"function\"===typeof a)this.removeListener(b, a);else if(a){do this.removeListener(b,a[a.length-1]);while(a[0])}return this};EventEmitter.prototype.listeners=function(b){var a=this._events;b=a?(b=a[b])?\"function\"===typeof b?[b]:arrayClone(b,b.length):[]:[];return b};EventEmitter.listenerCount=function(b,a){return\"function\"===typeof b.listenerCount?b.listenerCount(a):listenerCount.call(b,a)};EventEmitter.prototype.listenerCount=listenerCount; function listenerCount(b){var a=this._events;if(a){b=a[b];if(\"function\"===typeof b)return 1;if(b)return b.length}return 0}function spliceOne(b,a){for(var c=a,d=c+1,e=b.length;d<e;c+=1,d+=1)b[c]=b[d];b.pop()}function arrayClone(b,a){for(var c=Array(a);a--;)c[a]=b[a];return c}",
    "deps": {}
  }
}